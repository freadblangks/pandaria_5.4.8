name: windows-build

on:
  pull_request:
    paths-ignore:
      - 'sql/**'
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  REPO_DIR : ${{github.workspace}}
  BUILD_DIR: ${{github.workspace}}/bin/builddir
  BOOST_TOOLSET: "msvc"
  BOOST_VERSION: "1.78.0"
  
jobs:
  build:
    runs-on: windows-2019
    if: ${{ !github.event.pull_request.draft }}

    steps:
    #git checkout
    - uses: actions/checkout@v2

    - uses: FranzDiebold/github-env-vars-action@v2
    - name: Create Build Environment
      run: |
        echo "ARCHIVE_FILENAME=$env:CI_REPOSITORY_NAME-${{matrix.TYPE}}-$env:CI_SHA_SHORT.zip" >> $env:GITHUB_ENV
        cmake -E make_directory ${{ env.BUILD_DIR }}
 
    - name: Install boost
      uses: MarkusJx/install-boost@v2.4.4
      id: install-boost
      with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here: 
          # https://github.com/actions/boost-versions/blob/main/versions-manifest.json
          boost_version: ${{env.BOOST_VERSION}}
          # OPTIONAL: Specify a platform version
          platform_version: 2019         
          # OPTIONAL: Specify a toolset on windows
          toolset: ${{env.BOOST_TOOLSET}}
          # OPTIONAL: Specify a custon install location
          boost_install_dir: ${{env.BOOST_INSTALL_DIR}}
          # NOTE: If a boost version matching all requirements cannot be found,
          # this build step will fail          
    - name: windows dependencies
      run: |
        #make
        choco install -y make
        #cmake
        choco install -y cmake
        #openssl
        choco install -y openssl --version=1.1.1.2100
      #git bash shell
      shell: bash

    #build and install
    - name: windows build & install
      env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      run: |
        cd $GITHUB_WORKSPACE
        
        mkdir -p build && cd build
        cmake .. -DTOOLS=ON -DELUNA=1 -A x64
        cmake --build . --config RelWithDebInfo --parallel 4
      #git bash shell
      shell: bash
